/*--------------------------------*- C++ -*----------------------------------*\
| =========                 |                                                 |
| \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox           |
|  \\    /   O peration     | Version:  dev                                   |
|   \\  /    A nd           | Web:      www.OpenFOAM.org                      |
|    \\/     M anipulation  |                                                 |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    object      blockMeshDict;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

convertToMeters 1;

vertices
(
//    (-0.25 -0.025 0)//0
//    (0.25 -0.025 0)//1
//    (0.25 0.025 0)//2

//    (-0.25 0.025 0)//3
//    (-0.25 -0.025 0.6)//4
//    (0.25 -0.025 0.6)//5
//    (0.25 0.025 0.6)//6
//    (-0.25 0.025 0.6)//7
//    (-0.3 -0.075 0)//8
//    (-0.25 -0.075 0)//9
//    (-0.25 0.075 0)//10
//    (-0.3 0.075 0)//11
//    (-0.3 -0.075 0.6)//12
//    (-0.25 -0.075 0.6)//13
//    (-0.25 0.075 0.6)//14
//    (-0.3 0.075 0.6)//15
//   (0.3 -0.075 0)//16
//    (0.25 -0.075 0)//17
//    (0.25 0.075 0)//18
//    (0.3 0.075 0)//19
//    (0.3 -0.075 0.6)//20
//    (0.25 -0.075 0.6)//21
//    (0.25 0.075 0.6)//22
//    (0.3 0.075 0.6)//23
//    (-0.3 -0.2 0)//24
//    (0.3 -0.2 0)//25
//    (-0.3 -0.2 0.6)//26
//    (0.3 -0.2 0.6)//27
//    (-0.3 0.2 0)//28
//    (0.3 0.2 0)//29
//    (-0.3 0.2 0.6)//30
//    (0.3 0.2 0.6)//31
//    (-0.375 -0.25 0) //32
//    (-0.3 -0.25 0) //33
//    (-0.3 0.25 0) //34
//    (-0.375 0.25 0) //35
//    (-0.375 -0.25 0.6) //36
//    (-0.3 -0.25 0.6) //37
//    (-0.3 0.25 0.6) //38
//    (-0.375 0.25 0.6) //39
//    (0.3 -0.25 0) // 40
//    (0.375 -0.25 0) // 41
//    (0.375 0.25 0) // 42 
//    (0.3 0.25 0) // 43
//    (0.3 -0.25 0.6) // 44
//    (0.375 -0.25 0.6) // 45
//    (0.375 0.25 0.6) // 46
//    (0.3 0.25 0.6) // 47
//    (-0.3 -0.2 0)//48
//    (0.3 -0.2 0)//49
//    (-0.3 -0.2 0.6)//50
//    (0.3 -0.2 0.6)//51
//    (-0.3 0.2 0)//52
//    (0.3 0.2 0)//53
//    (-0.3 0.2 0.6)//54
//    (0.3 0.2 0.6)//55
//    (-0.375 -0.25 0.8) //56
//    (0.375 -0.25 0.8) // 57
//    (0.375 0.25 0.8) // 58
//    (-0.375 0.25 0.8) //59

//vertex from 0-63 are used to identify the 3-level mesh boundaries)
     (-0.3 -0.2 0)//a0
     (0.3 -0.2 0)//a1
     (0.3 0.2 0)//a2
     (-0.3 0.2 0)//a3
     (-0.3 -0.2 0.6)//a4
     (0.3 -0.2 0.6)//a5
     (0.3 0.2 0.6)//a6
     (-0.3 0.2 0.6)//a7
     (-0.4 -0.3 0) //a8
     (-0.3 -0.3 0) //a9
     (-0.3 0.3 0)  //a10
     (-0.4 0.3 0)  //a11  
     (-0.4 -0.3 0.6) //a12
     (-0.3 -0.3 0.6) //a13
     (-0.3 0.3 0.6)  //a14
     (-0.4 0.3 0.6)  //a15  
     (0.3 -0.3 0) //a16
     (0.4 -0.3 0) //a17
     (0.4 0.3 0) //a18
     (0.3 0.3 0) //a19
     (0.3 -0.3 0.6) //a20
     (0.4 -0.3 0.6) //a21
     (0.4 0.3 0.6) //a22
     (0.3 0.3 0.6) //a23
     (-0.3 -0.2 0)//a24
     (0.3 -0.2 0)//a25
     (-0.3 -0.2 0.6)//a26
     (0.3 -0.2 0.6)//a27
     (-0.3 0.2 0)//a28
     (0.3 0.2 0) //a29
     (-0.3 0.2 0.6)//a30
     (0.3 0.2 0.6) //a31
     (-0.4 -0.3 0.8)//a32
     (0.4 -0.3 0.8) //a33
     (0.4 0.3 0.8)  //a34
     (-0.4 0.3 0.8) //a35
     (-1 -1 0)      //a36
     (-0.4 -1 0)    //a37
     (-0.4 1 0)     //a38
     (-1 1 0)       //a39
     (-1 -1 0.8)      //a40
     (-0.4 -1 0.8)    //a41
     (-0.4 1 0.8)     //a42
     (-1 1 0.8)       //a43
     (0.4 -1 0)       //A44
     (1 -1 0)         //a45
     (1 1 0)          //a46
     (0.4 1 0)        //a47
     (0.4 -1 0.8)       //A48
     (1 -1 0.8)         //a49
     (1 1 0.8)          //a50
     (0.4 1 0.8)        //a51
     (-0.4 -0.3 0)      //a52
     (0.4 -0.3 0)       //a53
     (-0.4 -0.3 0.8)    //a54
     (0.4 -0.3 0.8)     //a55
     (-0.4 0.3 0)       //a56  
     (0.4 0.3 0)        //a57
     (-0.4 0.3 0.8)     //a58
     (0.4 0.3 0.8)      //a59
     (-1 -1 2)         //a60
     (1 -1 2)          //a61
     (1 1 2)           // a62
     (-1 1 2)          //a63 

// from this point on, those vertices are used for boundary conditions only
     
     (-0.25 -0.025 0) // b64
     (-0.25 0.025 0)  // b65
     (0.25 0.025 0)   // b66
     (0.25 -0.025 0)  //b67
     (-0.3 -0.075 0) //b68
     (-0.3 0.075 0) //b69
     (-0.25 0.075 0) //b70
     (-0.25 -0.075 0) //b71
     (0.25 -0.075 0) //b72
     (0.25 0.075 0) //b73
     (0.3 0.075 0) //b74
     (0.3 -0.075 0) //b75
     (-0.375 -0.25 0) //b76
     (-0.375 0.25 0) //b77
     (-0.3 0.25 0) //b78
     (-0.3 -0.25 0) //b79
     (0.3 -0.25 0) //b80
     (0.3 0.25 0) //b81
     (0.375 0.25 0) // b82
     (0.375 -0.25 0) //b83
     (-0.475 -0.35 0) //b84
     (-0.475 0.35 0) //b85
     (-0.375 0.35 0) // b86
     (-0.375 -0.35 0) //b87
     (0.375 -0.35 0) //b88
     (0.375 0.35 0) //b89
     (0.475 0.35 0) // b90
     (0.475 -0.35 0) //b91
     (-0.475 1 0)    //b92
     (-0.475 -1 0)   //b93
     (0.475 1 0)     //b94
     (0.475 -1 0)    //b95

 
);

blocks
(
//    hex (0 1 2 3 4 5 6 7) (20 2 24) simpleGrading (1 1 1) //(120 12 144)
//    hex (8 9 10 11 12 13 14 15) (2 6 24) simpleGrading (1 1 1) // (12 36 144)
//    hex (17 16 19 18 21 20 23 22) (2 6 24) simpleGrading (1 1 1) // (12 36 144)
//    hex (3 2 18 10 7 6 22 14) (20 2 24) simpleGrading (1 1 1) //(120 12 144)
//    hex (9 17 1 0 13 21 5 4) (20 2 24) simpleGrading (1 1 1) //(120 12 144)
//    hex (24 25 16 8 26 27 20 12) (24 5 24) simpleGrading (1 1 1)// (144 30 144)
//    hex (11 19 29 28 15 23 31 30) (24 5 24) simpleGrading (1 1 1)// (144 30 144)
//    hex (32 33 34 35 36 37 38 39) (2 10 12) simpleGrading (1 1 1)// (9 60 72)
//    hex (40 41 42 43 44 45 46 47) (2 10 12) simpleGrading (1 1 1)// (9 60 72)
//    hex (33 40 49 48 37 44 51 50) (12 1 12) simpleGrading (1 1 1)// (72 6 72)
//    hex (52 53 43 34 54 55 47 38) (12 1 12) simpleGrading (1 1 1)// (72 6 72)
//    hex (36 45 46 39 56 57 58 59) (15 10 4) simpleGrading (1 1 1)// (90 60 24)
      hex (0 1 2 3 4 5 6 7) (24 16 24) simpleGrading (1 1 1) // (144 96 144)
      hex (8 9 10 11 12 13 14 15) (2 12 12) simpleGrading (1 1 1) // (12 72 72)
      hex (16 17 18 19 20 21 22 23) (2 12 12) simpleGrading (1 1 1) // (12 72 72)
      hex (9 16 25 24 13 20 27 26) (12 2 12) simpleGrading (1 1 1) // (72 12 72)
      hex (28 29 19 10 30 31 23 14) (12 2 12) simpleGrading (1 1 1) // (72 12 72)
      hex (12 21 22 15 32 33 34 35) (16 12 4) simpleGrading (1 1 1) // (96 72 24)
      hex (36 37 38 39 40 41 42 43) (6 20 8) simpleGrading (1 1 1) // (36 120 48)
      hex (44 45 46 47 48 49 50 51) (6 20 8) simpleGrading (1 1 1) // (36 120 48)
      hex (37 44 53 52 41 48 55 54) (8 7 8) simpleGrading (1 1 1) // (48 42 48)
      hex (56 57 47 38 58 59 51 42) (8 7 8) simpleGrading (1 1 1) // (48 42 48)
      hex (40 49 50 43 60 61 62 63) (20 20 12) simpleGrading (1 1 1) // (120 120 72)
     



);

edges
(
);
boundary
(
//    inletFuel
//   {
//        type patch;
//        faces
//        (
//            (64 65 66 67)
//        );
//    }
//    inletCoflow
//   {
//        type patch;
//        faces
//        (
//            (76 77 78 79)
//	    (69 78 81 74)
//    	    (80 81 82 83)
//	    (79 68 75 80)
//        );
//    }

    outlet
    {
        type patch;
	faces
	(
	    (60 61 62 63)
	);
    }
//    fixedWalls
//    {
//        type wall;
//        faces
//        (
//            (68 69 70 71)
//	    (65 70 73 66)
//	    (72 73 74 75)
//	    (71 64 67 72)
//	    (84 85 86 87)
//	    (77 86 89 82)
//	    (88 89 90 91)
//	    (87 76 83 88)
//
//       );
//    }

//      entrainment
//      {
//     	  type patch;
//	faces
//	(
//	    (36 39 92 93)
//	    (85 92 94 90)
//	    (95 94 46 45)
//	    (93 84 91 95)
//	    (36 60 63 39)
//	    (39 63 62 46)
//	    (46 62 61 45)
//	    (45 61 60 36)
//
//	);
//     }
//    frontAndBack
//    {
//        type empty;
//        faces
//        (
//            (0 3 2 1)
//            (4 5 6 7)
//        );
//    }
);

mergePatchPairs
(
);

// ************************************************************************* //
